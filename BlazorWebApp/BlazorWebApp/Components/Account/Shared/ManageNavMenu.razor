@using Microsoft.AspNetCore.Identity
@using BlazorWebApp.Data
@rendermode InteractiveServer

@inject SignInManager<ApplicationUser> SignInManager


<ul class="nav nav-pills flex-column">
    <li class="nav-item">
        <NavLink class="nav-link btn-gray" href="Account/Manage" Match="NavLinkMatch.All">Profile</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link btn-gray" href="Account/Manage/Email">Email</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link btn-gray" href="Account/Manage/ChangePassword">Security</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link btn-gray" href="Account/Manage/#">Notifications</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link btn-gray" href="Account/Manage/#">Messages</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link btn-gray" href="Account/Manage/#">Saved Items</NavLink>
    </li>
    <li class="nav-item">
        <button class="nav-link btn-gray" @onclick="SignOut">Sign out</button>
    </li>
  

    @*  @if (hasExternalLogins)
    {
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage/ExternalLogins">External logins</NavLink>
        </li>
    }
    <li class="nav-item">
        <NavLink class="nav-link" href="Account/Manage/TwoFactorAuthentication">Two-factor authentication</NavLink>
    </li>
    <li class="nav-item">
        <NavLink class="nav-link" href="Account/Manage/PersonalData">Personal data</NavLink>
    </li>  *@
</ul>


@code {
    private bool hasExternalLogins;
  

    protected override async Task OnInitializedAsync()
    {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    }

    public async Task SignOut()
    {
        await SignInManager.SignOutAsync();
        RedirectManager.RedirectTo("/");

    }
 
}
